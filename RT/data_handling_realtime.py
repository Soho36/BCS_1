import pandas as pd
# import time
#
# current_time = time.strftime('%H:%M:%S')

log_file_reading_interval = 1       # File reading interval (sec)

# +------------------------------------------------------------------+
# FILE TRANSMIT PATHS
# +------------------------------------------------------------------+

mt5_account_number = 475    # LAST 3 DIGITS OF MT5 ACCOUNT. MUST BE CHANGED BEFORE BUILDING EXE

# MT5 directory with OHLC log file (logging on active timeframe):
mt5_logging_file_path = (
    f'C:/Users/Liikurserv/AppData/Roaming/MetaQuotes/Terminal/'
    f'1D0E83E0BCAA42603583233CF21A762C/MQL5/Files/'    # HASH FOLDER MUST BE CHANGED BEFORE EXE BUILD
    f'OHLCVData_{mt5_account_number}.csv'
)

# File with signal generated by Python script
buy_sell_signals_for_mt5_filepath = (
     f'C:/Users/Liikurserv/AppData/Roaming/MetaQuotes/Terminal/'
     f'1D0E83E0BCAA42603583233CF21A762C/MQL5/Files/'    # HASH FOLDER MUST BE CHANGED BEFORE EXE BUILD
     f'buy_sell_signals_from_python_level.txt'
     )


def get_dataframe_from_file():
    log_df = pd.read_csv(mt5_logging_file_path, sep=';', encoding='utf-16', engine='python')
    new_column_names = ['Ticker', 'Timeframe', 'Date', 'Time', 'Open', 'High', 'Low', 'Close', 'Volume']
    log_df.columns = new_column_names
    log_df['Datetime'] = pd.to_datetime(log_df['Date'] + ' ' + log_df['Time'], format='ISO8601')
    log_df.set_index('Datetime', inplace=True)
    dataframe_from_log = log_df.loc[:, ['Ticker', 'Date', 'Time', 'Open', 'High', 'Low', 'Close']]

    return dataframe_from_log


def save_order_parameters_to_file(line_order_parameters):
    with open(buy_sell_signals_for_mt5_filepath, 'w', encoding='utf-8') as file:
        file.writelines(line_order_parameters)
        print('NEW ORDER IS SUCCESSFULLY SAVED TO FILE')





